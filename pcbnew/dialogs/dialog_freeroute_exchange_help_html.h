// Do not edit this file, it is autogenerated by CMake from an HTML file
"<html>\n"
"<!-- This file is used to autogenerate a *.h file, but you can load it into a browser to preview -->\n"
"<h1>Freerouter Guidelines:</h1>\n"
"<ol>\n"
"<li> in pcbnew, using the Layers Setup dialog:</li><br>\n"
" <li>choose the number of layers, and enter the name of each layer.</li><br><br>\n"
"    These should look something like this (if a 6 layer board):\n"
"<ul>\n"
"    <li>Front - signal</li>\n"
"    <li>Ground - power</li>\n"
"    <li>H1_Signal - signal</li>\n"
"    <li>V2_Signal - signal</li>\n"
"    <li>Power - power</li>\n"
"    <li>Back - signal</li>\n"
"</ul><br>\n"
"    Notice that after the layer name there is a layer type field, either 'signal' or 'power', typically.\n"
"    Any layer identified as 'power' will be removed from the layer menu in Freerouter,\n"
"    as this will be assumed to contain a power zone.\n"
"</li><br><br>\n"
"<li> in pcbnew:  establish board perimeter.</li><br>\n"
"<li> in pcbnew: load in the netlist so you have all the components defined and instantiated.</li><br>\n"
"<li> in pcbnew: establish any zones, inclusive of net association.</li><br>\n"
"<li> in pcbnew: do the degree of component placements you are comfortable with.\n"
"     It is a little easier to accurately position components in pcbnew than in\n"
"     freerouter, but either will work.</li><br>\n"
"<li> in pcbnew: set up the netclasses. Power traces might be a little thicker\n"
"     than signal traces. If so, add a netclass called 'power'.\n"
"     Make its traces thicker than what you establish for netclass 'Default'.\n"
"     Set trace width, spacing and vias for each netclass.</li><br>\n"
"<li> in pcbnew: export to DSN.</li><br>\n"
"<li> load up freerouter (keep it running for any subsequent iterations of 5) through 16) here).</li><br>\n"
"<li> in freerouter: load the project's *.dsn file. Immediately after a load, all\n"
"     components and traces (if any) will initially be 'fixed'. This is a 'lock\n"
"     in place' toggle that you can undo by selecting a region with your mouse\n"
"     and then selecting 'Unfix' from the menu. Occassionally you may want to\n"
"     re-fix a trace or a part, if only temporarily. This keeps it locked in\n"
"     place.\n"
"</li><br>\n"
"<li> useful, not mandatory: in freerouter: set your move snap modulus, which seems\n"
"     to default to 1 internal unit.\n"
"     20 mils in x and in y is about reasonable.</li><br>\n"
"<li> in freerouter: finish placing any components, you can change sides of a part\n"
"     here also, rotate, whatever.</li><br>\n"
"<li> in freerouter: route the board, and save frequently to a *.dsn file while\n"
"     routing in case of power loss. Pick the menu option for saving a full *.dsn\n"
"     file, not a session file (yet). The full freerouter *.dsn file is a superset\n"
"     format, one that can be reloaded in the event of a power loss. Whereas the\n"
"     *.ses file is not a complete design, but only with the *.brd file\n"
"     constitutes a full design. So it is important to backup your work to a\n"
"     *.dsn file while routing in case of power loss.</li><br>\n"
"<li> in freerouter: when done, or when you want to back import, then save as a session file, *.ses.</li><br>\n"
"<li> in pcbnew: backimport the session file</li><br>\n"
"<li> in pcbnew: at this point the zones have to be refilled. One way to do that\n"
"     is to simply run DRC.</li>\n"
"</ol>\n"
"</html>\n"
